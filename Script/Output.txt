        static std::map<WORD, const char*> TypeMap = {
            { IMAGE_FILE_MACHINE_UNKNOWN, "The contents of this field are assumed to be applicable to any machine type" },
            { IMAGE_FILE_MACHINE_AM33, "Matsushita AM33" },
            { IMAGE_FILE_MACHINE_AMD64, "x64" },
            { IMAGE_FILE_MACHINE_ARM, "ARM little endian" },
            { IMAGE_FILE_MACHINE_ARM64, "ARM64 little endian" },
            { IMAGE_FILE_MACHINE_ARMNT, "ARM Thumb-2 little endian" },
            { IMAGE_FILE_MACHINE_EBC, "EFI byte code" },
            { IMAGE_FILE_MACHINE_I386, "Intel 386 or later processors and compatible processors" },
            { IMAGE_FILE_MACHINE_IA64, "Intel Itanium processor family" },
            { IMAGE_FILE_MACHINE_M32R, "Mitsubishi M32R little endian" },
            { IMAGE_FILE_MACHINE_MIPS16, "MIPS16" },
            { IMAGE_FILE_MACHINE_MIPSFPU, "MIPS with FPU" },
            { IMAGE_FILE_MACHINE_MIPSFPU16, "MIPS16 with FPU" },
            { IMAGE_FILE_MACHINE_POWERPC, "Power PC little endian" },
            { IMAGE_FILE_MACHINE_POWERPCFP, "Power PC with floating point support" },
            { IMAGE_FILE_MACHINE_R4000, "MIPS little endian" },
            { IMAGE_FILE_MACHINE_RISCV32, "RISC-V 32-bit address space" },
            { IMAGE_FILE_MACHINE_RISCV64, "RISC-V 64-bit address space" },
            { IMAGE_FILE_MACHINE_RISCV128, "RISC-V 128-bit address space" },
            { IMAGE_FILE_MACHINE_SH3, "Hitachi SH3" },
            { IMAGE_FILE_MACHINE_SH3DSP, "Hitachi SH3 DSP" },
            { IMAGE_FILE_MACHINE_SH4, "Hitachi SH4" },
            { IMAGE_FILE_MACHINE_SH5, "Hitachi SH5" },
            { IMAGE_FILE_MACHINE_THUMB, "Thumb" },
            { IMAGE_FILE_MACHINE_WCEMIPSV2, "MIPS little-endian WCE v2" },
        };
